// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: storage.capnp

#include "storage.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<62> b_bad1c6cf3fb4c5be = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    190, 197, 180,  63, 207, 198, 209, 186,
     14,   0,   0,   0,   1,   0,   2,   0,
     69,  15, 192,  62,  81, 213, 150, 225,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 114,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 111,
    112, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 105, 103, 105, 110,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 115, 116,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 110, 103, 116, 104,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bad1c6cf3fb4c5be = b_bad1c6cf3fb4c5be.words;
#if !CAPNP_LITE
static const uint16_t m_bad1c6cf3fb4c5be[] = {1, 2, 0};
static const uint16_t i_bad1c6cf3fb4c5be[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bad1c6cf3fb4c5be = {
  0xbad1c6cf3fb4c5be, b_bad1c6cf3fb4c5be.words, 62, nullptr, m_bad1c6cf3fb4c5be,
  0, 3, i_bad1c6cf3fb4c5be, nullptr, nullptr, { &s_bad1c6cf3fb4c5be, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_8496c619c3ea84b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 132, 234, 195,  25, 198, 150, 132,
     14,   0,   0,   0,   1,   0,   1,   0,
     69,  15, 192,  62,  81, 213, 150, 225,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 114,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  67, 114,
    101,  97, 116, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 115, 116,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8496c619c3ea84b5 = b_8496c619c3ea84b5.words;
#if !CAPNP_LITE
static const uint16_t m_8496c619c3ea84b5[] = {1, 0};
static const uint16_t i_8496c619c3ea84b5[] = {0, 1};
const ::capnp::_::RawSchema s_8496c619c3ea84b5 = {
  0x8496c619c3ea84b5, b_8496c619c3ea84b5.words, 47, nullptr, m_8496c619c3ea84b5,
  0, 2, i_8496c619c3ea84b5, nullptr, nullptr, { &s_8496c619c3ea84b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<87> b_d8670c870e430f32 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     50,  15,  67,  14, 135,  12, 103, 216,
     14,   0,   0,   0,   1,   0,   1,   0,
     69,  15, 192,  62,  81, 213, 150, 225,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111, 114,  97, 103, 101,  46,
     99,  97, 112, 110, 112,  58,  80,  97,
    116,  99, 104,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    156,   0,   0,   0,   2,   0,   1,   0,
    104,  97, 115, 104,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 101, 110, 103, 116, 104,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 112, 121,  76, 105, 115, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    190, 197, 180,  63, 207, 198, 209, 186,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 101,  97, 116, 101,  76, 105,
    115, 116,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181, 132, 234, 195,  25, 198, 150, 132,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8670c870e430f32 = b_d8670c870e430f32.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d8670c870e430f32[] = {
  &s_8496c619c3ea84b5,
  &s_bad1c6cf3fb4c5be,
};
static const uint16_t m_d8670c870e430f32[] = {2, 3, 0, 1};
static const uint16_t i_d8670c870e430f32[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d8670c870e430f32 = {
  0xd8670c870e430f32, b_d8670c870e430f32.words, 87, d_d8670c870e430f32, m_d8670c870e430f32,
  2, 4, i_d8670c870e430f32, nullptr, nullptr, { &s_d8670c870e430f32, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Copy
#ifndef _MSC_VER
constexpr uint16_t Copy::_capnpPrivate::dataWordSize;
constexpr uint16_t Copy::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Copy::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Copy::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Copy::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Create
#ifndef _MSC_VER
constexpr uint16_t Create::_capnpPrivate::dataWordSize;
constexpr uint16_t Create::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Create::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Create::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Create::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Patch
#ifndef _MSC_VER
constexpr uint16_t Patch::_capnpPrivate::dataWordSize;
constexpr uint16_t Patch::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Patch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Patch::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Patch::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



